{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/comps/ajax-arry/ajax-arry.component.ts","./src/app/comps/ajax-arry/ajax-arry.component.html","./src/app/serve/s.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ajaxeArry';\n}\n","<app-ajax-arry></app-ajax-arry>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport{HttpClientModule} from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { AjaxArryComponent } from './comps/ajax-arry/ajax-arry.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AjaxArryComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { SService } from 'src/app/serve/s.service';\n\n@Component({\n  selector: 'app-ajax-arry',\n  templateUrl: './ajax-arry.component.html',\n  styleUrls: ['./ajax-arry.component.css']\n})\nexport class AjaxArryComponent implements OnInit {\na\n  constructor(private serv:SService) {\nthis.serv.httpGetTxt(\n  \"https://raw.githubusercontent.com/bresleveloper/db/master/ajax/someDB.json\")\n.subscribe((result)=>{\n  this.a=result\n  console.log( this.a);\n  \n})\n   }\n;\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>ajax-arry works!</p>\n<div *ngIf=\"a\">\n{{a.students[0].name}}\n</div>","import { Injectable } from '@angular/core';\nimport{HttpClient} from '@angular/common/http'\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SService {\n\n  constructor(public http:HttpClient){}\n\n  httpGetTxt(url:string):Observable<any> {\n  \n    return this.http.get(url)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}